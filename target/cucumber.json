[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-04-21T13:21:06.342Z",
        "before": [
          {
            "result": {
              "duration": 55351143104,
              "status": "passed"
            },
            "match": {
              "location": "Hook.InitializeTest(Scenario)"
            }
          }
        ],
        "line": 17,
        "name": "user must be able to checkout",
        "description": "",
        "id": "lens-checkout;user-must-be-able-to-checkout;;2",
        "after": [
          {
            "result": {
              "duration": 584937287,
              "status": "passed"
            },
            "match": {
              "location": "Hook.TearDownTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 580842592,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 174947,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 6,
            "name": "user clicks on Dailies AquaComfort Plus",
            "match": {
              "arguments": [
                {
                  "val": "Dailies AquaComfort Plus",
                  "offset": 15
                }
              ],
              "location": "VerifyLensSelectionpage.Verify_clicks_on(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 43853,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 100240493,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 57849,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 7,
            "name": "user must be navigated to Dailies AquaComfort Plus selection page",
            "match": {
              "arguments": [
                {
                  "val": "Dailies AquaComfort Plus",
                  "offset": 26
                }
              ],
              "location": "VerifyLensSelectionpage.user_must_be_navigated_to_selection_page(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 69979,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//select[@id\u003d\u0027option1\u0027]\"}\n  (Session info: chrome\u003d80.0.3987.163)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00274.0.0-alpha-3\u0027, revision: \u00278c567de6dc\u0027\nSystem info: host: \u0027X03163\u0027, ip: \u0027192.168.0.10\u0027, os.name: \u0027Windows 7\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.1\u0027, java.version: \u00271.8.0_111\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.163, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\\Users\\JEYABA~1.GEO\\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:59596}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: 179c47a93a0576f0375597a7c948fb03\n*** Element info: {Using\u003dxpath, value\u003d//select[@id\u003d\u0027option1\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:191)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:125)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:445)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:396)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)\r\n\tat com.sun.proxy.$Proxy20.getTagName(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.Select.\u003cinit\u003e(Select.java:46)\r\n\tat pages.lensdetailspage.select_eye_power(lensdetailspage.java:53)\r\n\tat steps.VerifyLensSelectionpage.user_contact_lens_prescription_for_and(VerifyLensSelectionpage.java:44)\r\n\tat âœ½.user adds contact lens prescription for -15.00 and -14.50(file:src/test/java/features/VerifyLensCheckout.feature:8)\r\n",
              "duration": 44830780,
              "status": "failed"
            },
            "before": [
              {
                "result": {
                  "duration": 103103,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 8,
            "name": "user adds contact lens prescription for -15.00 and -14.50",
            "match": {
              "arguments": [
                {
                  "val": "-15.00",
                  "offset": 40
                },
                {
                  "val": "-14.50",
                  "offset": 51
                }
              ],
              "location": "VerifyLensSelectionpage.user_contact_lens_prescription_for_and(String,String)"
            },
            "after": [
              {
                "result": {
                  "duration": 30790,
                  "status": "passed"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4199,
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 9797,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 9,
            "name": "user click addtobasket_button",
            "match": {
              "location": "VerifyLensChecout.userclick_addtobasketbutton()"
            },
            "after": [
              {
                "result": {
                  "duration": 2799,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2333,
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 2799,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 10,
            "name": "Dailies AquaComfort Plus details is displayed on cartpage",
            "match": {
              "arguments": [
                {
                  "val": "Dailies AquaComfort Plus",
                  "offset": 0
                }
              ],
              "location": "VerifyLensChecout.details_is_displayed_on_cartpage(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 3732,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2333,
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 2333,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 11,
            "name": "user click on checkoutbutton",
            "match": {
              "location": "VerifyLensChecout.user_click_on_checkoutbutton()"
            },
            "after": [
              {
                "result": {
                  "duration": 2332,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2333,
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 2332,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.BeforeEveryStep(Scenario)"
                }
              }
            ],
            "line": 12,
            "name": "user is navigated to siginpage",
            "match": {
              "location": "VerifyLensChecout.user_is_navigated_to_siginpage()"
            },
            "after": [
              {
                "result": {
                  "duration": 2333,
                  "status": "skipped"
                },
                "match": {
                  "location": "Hook.AfterEveryStep(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Lens checkout",
    "description": "",
    "id": "lens-checkout",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/VerifyLensCheckout.feature",
    "tags": []
  }
]